[Unit]
Description=MesosAgent
After=docker.service
Requires=docker.service
Requires=weaveproxy.service

[Service]
Restart=on-failure
RestartSec=20
TimeoutStartSec=0
EnvironmentFile=-/etc/environment
ExecStartPre=-/usr/bin/docker kill mesos_agent
ExecStartPre=-/usr/bin/docker rm mesos_agent
ExecStartPre=/usr/bin/docker pull {{ mesos_agent_image }}
ExecStart=/usr/bin/docker run --rm --name mesos_agent \
--net=host \
--privileged=true \
-p {{ mesos_agent_port }}:{{ mesos_agent_port }} \
-v /sys:/sys \
-v /proc:/host/proc:ro \
-v /lib/libgcrypt.so:/lib/libgcrypt.so:ro \
-v /lib/libgcrypt.so:/lib/libgcrypt.so.20:ro \
-v /lib/libsystemd.so.0:/lib/libsystemd.so.0:ro \
-v /lib/libpthread.so.0:/lib/libpthread.so.0:ro \
-v /lib64/libdevmapper.so.1.02:/lib/libdevmapper.so.1.02:ro \
-v /usr/bin/docker:/usr/bin/docker:ro \
-v {{ mesos_docker_socket }}:/var/run/docker.sock \
-v {{ mesos_agent_work_dir }}:{{ mesos_agent_work_dir }} \
-e "MESOS_MASTER=zk://{{ zookeeper_peers_nodes }}/mesos" \
-e "MESOS_EXECUTOR_REGISTRATION_TIMEOUT={{ mesos_executor_registration_timeout }}" \
-e "MESOS_CONTAINERIZERS={{ mesos_containerizers }}" \
-e "MESOS_RESOURCES={{ mesos_resources }}" \
-e "MESOS_IP={{ mesos_ip }}" \
-e "MESOS_WORK_DIR={{ mesos_agent_work_dir }}" \
-e "MESOS_LOG_DIR=/var/log/mesos" \
-e "MESOS_HOSTNAME={{ mesos_hostname }}" \
-e "MESOS_ISOLATION=cgroups/cpu,cgroups/mem" \
-e "MESOS_CGROUPS_ROOT=system.slice/mesos-agent.service" \
-e "MESOS_CGROUPS_HIERARCHY=/sys/fs/cgroup" \
{% if mesos_gpu|bool %}
-e "MESOS_ATTRIBUTES=hasGpu:true" \
{% endif %}
-e "LIBPROCESS_IP=${COREOS_PRIVATE_IPV4}" \
{{ mesos_agent_image }}

ExecStop=/usr/bin/docker stop mesos_agent

[Install]
WantedBy=multi-user.target
